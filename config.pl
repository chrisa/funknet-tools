#!/usr/local/bin/perl -w
use strict;
use lib './lib';
use Funknet::Config;
use Getopt::Std;

=head1 NAME

config.pl

=head1 DESCRIPTION

This is the main driver script for Funknet::Config. 

=head1 OPTIONS

=head2 -a 

'apply', Actually carries out the commands it proposes.

=head2 -q 

'quiet', for use in crontab, warnings and notifications of changes only. 

=head2 -f <config file location>

Specify the config file location.

=cut

my %opt;
getopts('aqf:', \%opt);

unless ($opt{f}) {
    print STDERR "usage: $0 -f path_to_config_file\n";
    exit(1);
}

my $config = Funknet::Config->new( configfile => $opt{f} );

# Generate the changes between current (host) and desired (whois) config.
my $bgp = $config->bgp_diff or die "bgp_diff failed: ".$config->error;
my $tun = $config->tun_diff or die "tun_diff failed: ".$config->error;

# Errors

my $warnings = $config->warn;
my $errors = $config->error;
if ($warnings && !$config->{_config}->{warnings}) {
    print "warnings generated:\n$warnings\n";
}
if ($errors) {
    print "errors generated:\n$errors\n";
}

# Dump the commands generated by the diff.
unless ($opt{q}) {
    print "Proposed changes:\n";
    print "BGP:\n";
    print $bgp->as_text;
    print "\n";
    print "Tunnels:\n";
    print $tun->as_text;
    print "\n";
}

# Run the commands on the local system.
if ($opt{a}) {
    $bgp->apply;
    $tun->apply;
}
