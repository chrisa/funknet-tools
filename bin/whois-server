#!/usr/bin/perl
#
# $Id$
#
# Copyright (c) 2005
#	The funknet.org Group.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 3. All advertising materials mentioning features or use of this software
#    must display the following acknowledgement:
#	This product includes software developed by The funknet.org
#	Group and its contributors.
# 4. Neither the name of the Group nor the names of its contributors
#    may be used to endorse or promote products derived from this software
#    without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE GROUP AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE GROUP OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.

use strict;
use Getopt::Std;
use Funknet::Whois::Server;
use Funknet::ConfigFile::Whois;

use vars qw/ $s $pidfile /;

my %opt;
getopts('f:', \%opt);

unless ($opt{f}) {
    print STDERR "usage: $0 -f whois_server_config_file\n";
    exit(1);
}
unless (-f $opt{f}) {
    print STDERR "-f option requires a path to a readable funknet_whois.conf file\n";
    exit(1);
}

my $config = new Funknet::ConfigFile::Whois($opt{f});

$SIG{HUP} = \&main::reload;
sub reload {
    $Funknet::Whois::Server::reload = 1;
    $SIG{HUP} = \&main::reload;
}	

$SIG{INT}  = \&main::cleanup;
$SIG{TERM} = \&main::cleanup;
sub cleanup {
    unlink $pidfile;
    exit 0;
}

$pidfile = ($config->pidfile_dir).'/whois-server-'.($config->whois_source()).'.pid';
if (-f $pidfile) {
    open PID, "$pidfile"
      or die "can't open pidfile $pidfile: $!";
    my $pid = <PID>;
    close PID;
    
    if (-d "/proc/$pid") {
	print STDERR 'whois-server for source '.($config->whois_source())." already running with pid $pid\n";
	exit 1;
    } else {
	unlink $pidfile;
	print STDERR "stale pidfile with pid $pid removed\n";
    }
}

open PID, ">$pidfile"
  or die "can't write to pidfile $pidfile: $!";
print PID "$$";
close PID;

$s = new Funknet::Whois::Server($config->whois_source, $config->objects_file, 1);
$s->load();
$s->start($config->listen_address(), $config->listen_port());
$s->go();

