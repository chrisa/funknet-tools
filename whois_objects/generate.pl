#!/usr/bin/perl
#
# Copyright (c) 2005
#	The funknet.org Group.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 3. All advertising materials mentioning features or use of this software
#    must display the following acknowledgement:
#	This product includes software developed by The funknet.org
#	Group and its contributors.
# 4. Neither the name of the Group nor the names of its contributors
#    may be used to endorse or promote products derived from this software
#    without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE GROUP AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE GROUP OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.

use strict;
use warnings;

use Data::Dumper;

my $templates_file = "templates.txt";

open TMPL, $templates_file
  or die "can't open $templates_file: $!";

my $this_object_type = '';
my $t;

LINE:
while (my $line = <TMPL>) {
    chomp $line;

    unless ($line) {
        $this_object_type = '';
        next LINE;
    }

    # RIPE template format goes:
    # attribute: [mandatory?] [count] [type of key]
    
    my ($attribute, $mandatory, $count, $key) = 
      $line =~ /^([a-z0-9-]+):\s+\[(\w+)\]\s+\[(\w+)\]\s+\[(.*|\s)\]/;

    $key =~ s! key$!!;
    $key =~ s!primary/lookup!primary!;
    $key =~ s! !!;

    unless ($this_object_type) {
        $this_object_type = $attribute;
        next LINE;
    }
    
    if ($this_object_type) {
        $t->{$this_object_type}->{$attribute}->{mandatory} = $mandatory;
        $t->{$this_object_type}->{$attribute}->{count}     = $count;
        if ($key) {
            $t->{$this_object_type}->{$attribute}->{key}       = $key;
        }
    }
}
close TMPL;

print <<'EOPERL';
package Funknet::Whois::ObjectDefs;
use strict;
#
# this file is autogenerated -- see whois_objects/generate.pl
#
use vars qw/ @EXPORT /;
@EXPORT = qw/ objectdefs /;
use base qw/ Exporter /;

sub objectdefs {

EOPERL

print "my ";
print Data::Dumper->Dump([$t], ['t']);

print <<'EOPERL';

    return $t;
}
EOPERL
